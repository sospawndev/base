os:
  - linux
language: php
php:
  - 7.2
  - 7.3
  - 7.4
  - 8.0
env:
  - DEPENDENCIES=lowest
  - DEPENDENCIES=highest

addons:
  apt:
    packages:
      - libxml2-utils # for xmllint

cache:
  directories:
  - $HOME/.composer/cache

before_script:
  # PHPUnit 8.x is not (yet) supported, so prevent issues with Travis images using it.
  - |
    if [ "${TRAVIS_PHP_VERSION}" != "8.0" ]; then
      export PHPUNIT_WORKAROUND=""
    elif [ "${TRAVIS_PHP_VERSION}" = "8.0" ]; then
      # Allow installing "incompatible" PHPUnit version on PHP 8.
      export PHPUNIT_WORKAROUND="--ignore-platform-reqs"
    fi
  - if [ "${DEPENDENCIES}" = "lowest" ]; then composer update ${PHPUNIT_WORKAROUND} --prefer-lowest --prefer-dist --no-interaction --no-progress; fi;
  - if [ "${DEPENDENCIES}" = "highest" ]; then composer update ${PHPUNIT_WORKAROUND} --prefer-dist --no-interaction --no-progress; fi;
  - if [ "${DEPENDENCIES}" = "highest" ]; then pecl install -f ast-1.0.14; fi; # Install AST extension, as phan uses it
  - export XMLLINT_INDENT="    "

script:
  - xmllint --noout --schema vendor/squizlabs/php_codesniffer/phpcs.xsd MO4/ruleset.xml
  - xmllint --noout --schema vendor/squizlabs/php_codesniffer/phpcs.xsd phpcs.mo4.xml
  - xmllint --noout --schema vendor/squizlabs/php_codesniffer/phpcs.xsd phpcs.xml.dist
  - diff -B MO4/ruleset.xml <(xmllint --format MO4/ruleset.xml)
  - diff -B phpcs.mo4.xml <(xmllint --format phpcs.mo4.xml)
  - diff -B phpcs.xml.dist <(xmllint --format phpcs.xml.dist)
  - vendor/bin/phpcs -s --standard=MO4 integrationtests/testfile.php # Check, if all the sniffs work with the current dependencies
  - vendor/bin/phpunit # Run tests
  - vendor/bin/phpcs # Stylecheck against MO4
  - vendor/bin/phpstan analyse --no-progress # Run PHPStan
  - vendor/bin/psalm --show-info=true # run psalm
  - if [ "${DEPENDENCIES}" = "highest" ]; then vendor/bin/phan; fi; # Run phan
  # Generate Code coverage report
  - |
    if [ "${TRAVIS_PHP_VERSION}" == "7.4" ] && [ "${DEPENDENCIES}" = "highest" ]; then
      echo 'xdebug.mode = "coverage"' >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini
      php -d zend_extension=xdebug.so vendor/bin/phpunit --coverage-clover=coverage.xml
    fi

jobs:
  include:
    - stage: Test
      name: PHP:8.0 Windows
      os: windows
      cache:
        directories:
          - C:/Users/travis/AppData/Local/Composer
      language: shell # No PHP currently
      env:
        - TRAVIS_PHP_VERSION=8.0
        - DEPENDENCIES=lowest
      install:
        # this doesn't work since choco 0.10.14 and currently there's no workaround, so the highest available version is used always
        - export EXACT_PHP_VERSION=$(choco search php --exact --all-versions --limit-output | grep $TRAVIS_PHP_VERSION | cut -d \| -f 2)
        - choco install php --version=${EXACT_PHP_VERSION} --package-parameters="/InstallDir:c:\tools\php"
        - choco install composer --ia "/DEV=C:\tools\php"
        - export PATH=/c/tools/php:$PATH
      script:
        - git config core.autocrlf false # fix CRLF issues
        - git add --renormalize .
        - git reset --hard
        - vendor/bin/phpcs -s --standard=MO4 integrationtests/testfile.php # Check, if all the sniffs work with the current dependencies
        - vendor/bin/phpunit # Run tests
        - vendor/bin/phpcs # Stylecheck against PHPCS's ruleset
        - vendor/bin/phpstan analyse --no-progress # Run PHPStan

after_success:
- curl -s https://codecov.io/bash | bash

notifications:
  slack:
    secure: MIe1/HFMQb3ES5uXVyjRohjP2FQoEFTO7luYAxqv20WBlchPIAlcvv8YucqMX/Nj6w082bvZL832eUZC8Fj7jSizv4l5EmPgIZKofzP8Lbth6yFrWvPwRu8SIJlQFr0Y8Yf0A92bp5EsK4MyG6y8W1p6MY4Smt3NX74pm5eqp4o=
